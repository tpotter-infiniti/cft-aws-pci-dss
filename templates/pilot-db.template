---
AWSTemplateFormatVersion: 2010-09-09
Description: Pilot DB stack and network
Parameters:
  pProduct:
    Type: String
  pRegion:
    Type: String
  pEnvironment:
    Type: String
  pRegionAZ1Name:
    Type: String
  pRegionAZ2Name:
    Type: String
  pMgtCIDR:
    Type: String
  pMgtVpcid:
    Type: String
  pMgtRouteTableApub:
    Type: String
  pMgtRouteTableBpub:
    Type: String
  pMgtRouteTableApri:
    Type: String
  pMgtRouteTableBpri:
    Type: String
  pRouteTableApub: 
    Type: String
  pRouteTableBpub: 
    Type: String
  pRouteTableApri: 
    Type: String 
  pRouteTableBpri:
    Type: String
  pVPCTenancy:
    Type: String
  pEC2KeyPair:
    Type: String
  pEC2KeyPairBastion:
    Type: String
  QuickStartS3URL:
    Type: String
  QSS3BucketName:
    Type: String
  QuickStartS3URL:
    Type: String
  QSS3KeyPrefix:
    Type: String
  pVpcid:
    Type: String
  pVpcCIDR:
    Type: String
  pSubnetApub001CIDR:
    Type: String
    Default: ''
  pSubnetApub002CIDR:
    Type: String
    Default: ''
  pSubnetApri001CIDR:
    Type: String
    Default: ''
  pSubnetApri002CIDR:
    Type: String
    Default: ''
  pSubnetApri003CIDR:
    Type: String
    Default: ''
  pSubnetApri004CIDR:
    Type: String
    Default: 10.20.18.32/27
  pSubnetBpub001CIDR:
    Type: String
    Default: ''
  pSubnetBpub002CIDR:
    Type: String
    Default: ''
  pSubnetBpri001CIDR:
    Type: String
    Default: ''
  pSubnetBpri002CIDR:
    Type: String
    Default: ''
  pSubnetBpri003CIDR:
    Type: String
    Default: ''
  pSubnetBpri004CIDR:
    Type: String
    Default: 10.20.18.96/27
  pSubnetApub001: 
    Type: String
    Default: ''
  pSubnetApub002: 
    Type: String
    Default: ''
  pSubnetApri001: 
    Type: String
    Default: ''
  pSubnetApri002: 
    Type: String
    Default: ''
  pSubnetApri003: 
    Type: String
    Default: ''
  pSubnetBpub001: 
    Type: String
    Default: ''
  pSubnetBpub002: 
    Type: String
    Default: ''
  pSubnetBpri001: 
    Type: String
    Default: ''
  pSubnetBpri002: 
    Type: String
    Default: ''
  pSubnetBpri003: 
    Type: String
    Default: ''
  pSecurityGroupDefault:
    Type: String
Conditions:
  IsGovCloud: !Equals [ !Ref 'AWS::Region', us-gov-west-1 ]
  # SupportsGlacier: !Equals [ !Ref pSupportsGlacier, true ]
  Disable: !Equals [ "1", "0" ]
  Enable: !Equals [ "0", "0" ]
  UseNacls: !Equals [ "0", "0" ]
Resources:
# Move subnet 3 to seperate DB template  
rSubnetApri003:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:  10.20.18.0/27
      AvailabilityZone: !Ref pRegionAZ2Name
      VpcId: !Ref pVpcid
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref pProduct, !Ref pRegion, !Ref pEnvironment, "sn-a-pri-003" ]]
        - Key: Environment
          Value: !Ref pEnvironment 
  rSubnetBpri003:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.20.18.64/27
      AvailabilityZone: !Ref pRegionAZ2Name
      VpcId: !Ref pVpcid
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref pProduct, !Ref pRegion, !Ref pEnvironment, "sn-b-pri-003" ]]
        - Key: Environment
          Value: !Ref pEnvironment
  rRouteTableAssocApri004:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref rSubnetApri003
      RouteTableId: !Ref pRouteTableApri
  rRouteTableAssocBpri004:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref rSubnetBpri003
      RouteTableId: !Ref pRouteTableBpri
# End subnet 3
# BEGIN Add 2 subnets

  rSubnetApri004:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:  10.20.18.32/27
      AvailabilityZone: !Ref pRegionAZ2Name
      VpcId: !Ref pVpcid
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref pProduct, !Ref pRegion, !Ref pEnvironment, "sn-a-pri-004" ]]
        - Key: Environment
          Value: !Ref pEnvironment 
  rSubnetBpri004:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.20.18.96/27
      AvailabilityZone: !Ref pRegionAZ2Name
      VpcId: !Ref pVpcid
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref pProduct, !Ref pRegion, !Ref pEnvironment, "sn-b-pri-004" ]]
        - Key: Environment
          Value: !Ref pEnvironment
  rRouteTableAssocApri004:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref rSubnetApri004
      RouteTableId: !Ref pRouteTableApri
  rRouteTableAssocBpri004:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref rSubnetBpri004
      RouteTableId: !Ref pRouteTableBpri
# END Add 2 subnets  

  rNaclApri1:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref pVpcid
            Tags:
            - Key: Name
              Value: !Join [ "-", [ !Ref pProduct, !Ref pRegion, !Ref pEnvironment, "sn-a-pri-001" ]]
  rNaclApri2:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref pVpcid
            Tags:
            - Key: Name
              Value: !Join [ "-", [ !Ref pProduct, !Ref pRegion, !Ref pEnvironment, "sn-a-pri-002" ]]
  rNaclApri3:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref pVpcid
            Tags:
            - Key: Name
              Value: !Join [ "-", [ !Ref pProduct, !Ref pRegion, !Ref pEnvironment, "sn-a-pri-003" ]]
  rNaclApri4:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref pVpcid
            Tags:
            - Key: Name
              Value: !Join [ "-", [ !Ref pProduct, !Ref pRegion, !Ref pEnvironment, "sn-a-pri-004" ]]
  rNaclBpri1:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref pVpcid
            Tags:
            - Key: Name
              Value: !Join [ "-", [ !Ref pProduct, !Ref pRegion, !Ref pEnvironment, "sn-b-pri-001" ]]
  rNaclBpri2:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref pVpcid
            Tags:
            - Key: Name
              Value: !Join [ "-", [ !Ref pProduct, !Ref pRegion, !Ref pEnvironment, "sn-b-pri-002" ]]
  rNaclBpri3:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref pVpcid
            Tags:
            - Key: Name
              Value: !Join [ "-", [ !Ref pProduct, !Ref pRegion, !Ref pEnvironment, "sn-b-pri-003" ]]
  rNaclBpri4:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref pVpcid
            Tags:
            - Key: Name
              Value: !Join [ "-", [ !Ref pProduct, !Ref pRegion, !Ref pEnvironment, "sn-b-pri-004" ]]
# NACL Subnet A pri 001
  rNACLRuleAllowEgressApri001:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref rNaclApri1
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
  rNACLRuleAllowAllTCPaPri001Mgt:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pMgtCIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 120
            NetworkAclId: !Ref rNaclApri1
  rNACLRuleAllowAllTCPaPri001aPub001:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetApub001CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 130
            NetworkAclId: !Ref rNaclApri1
  rNACLRuleAllowAllTCPaPri001aPub002:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetApub002CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 140
            NetworkAclId: !Ref rNaclApri1
  rNACLRuleAllowAllTCPaPri001aPri003:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetApri003CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 150
            NetworkAclId: !Ref rNaclApri1
  
# NACL Subnet A pri 002
  rNACLRuleAllowEgressApri002:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref rNaclApri2
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
  rNACLRuleAllowAllTCPaPri002Mgt:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pMgtCIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 120
            NetworkAclId: !Ref rNaclApri2
  rNACLRuleAllowAllTCPaPri002aPub001:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetApub001CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 130
            NetworkAclId: !Ref rNaclApri2
  rNACLRuleAllowAllTCPaPri002aPub002:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetApub002CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 140
            NetworkAclId: !Ref rNaclApri2
  rNACLRuleAllowAllTCPaPri002aPri004:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetApri004CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 150
            NetworkAclId: !Ref rNaclApri2
  
# NACL Subnet A pri 003
  rNACLRuleAllowEgressApri003:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref rNaclApri3
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
  rNACLRuleAllowAllTCPaPri003Mgt:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pMgtCIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 120
            NetworkAclId: !Ref rNaclApri3
  # rNACLRuleAllowAllTCPaPri003aPub001:
  #       Type: AWS::EC2::NetworkAclEntry
  #       Properties:
  #           CidrBlock: !Ref pSubnetApub001CIDR
  #           Protocol: 6
  #           PortRange:
  #               From: 1
  #               To: 65535
  #           RuleAction: allow
  #           RuleNumber: 130
  #           NetworkAclId: !Ref rNaclApri3
  # rNACLRuleAllowAllTCPaPri003aPub002:
  #       Type: AWS::EC2::NetworkAclEntry
  #       Properties:
  #           CidrBlock: !Ref pSubnetApub002CIDR
  #           Protocol: 6
  #           PortRange:
  #               From: 1
  #               To: 65535
  #           RuleAction: allow
  #           RuleNumber: 140
  #           NetworkAclId: !Ref rNaclApri3
  rNACLRuleAllowAllTCPaPri003aPri001:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetApri001CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 150
            NetworkAclId: !Ref rNaclApri3
  rNACLRuleAllowAllTCPaPri003bPri003:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetBpri003CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 160
            NetworkAclId: !Ref rNaclApri3
# NACL Subnet A pri 004
  rNACLRuleAllowEgressApri004:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref rNaclApri4
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
  rNACLRuleAllowAllTCPaPri004Mgt:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pMgtCIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 120
            NetworkAclId: !Ref rNaclApri4
  # rNACLRuleAllowAllTCPaPri004aPub001:
  #       Type: AWS::EC2::NetworkAclEntry
  #       Properties:
  #           CidrBlock: !Ref pSubnetApub001CIDR
  #           Protocol: 6
  #           PortRange:
  #               From: 1
  #               To: 65535
  #           RuleAction: allow
  #           RuleNumber: 130
  #           NetworkAclId: !Ref rNaclApri4
  # rNACLRuleAllowAllTCPaPri004aPub002:
  #       Type: AWS::EC2::NetworkAclEntry
  #       Properties:
  #           CidrBlock: !Ref pSubnetApub002CIDR
  #           Protocol: 6
  #           PortRange:
  #               From: 1
  #               To: 65535
  #           RuleAction: allow
  #           RuleNumber: 140
  #           NetworkAclId: !Ref rNaclApri4
  rNACLRuleAllowAllTCPaPri004aPri002:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetApri002CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 150
            NetworkAclId: !Ref rNaclApri4
  rNACLRuleAllowAllTCPaPri004bPri004:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetBpri004CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 160
            NetworkAclId: !Ref rNaclApri4

# #####################################################################
# AZ B Nacl's
# NACL Subnet B pri 001
  rNACLRuleAllowEgressBpri001:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref rNaclBpri1
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
  rNACLRuleAllowAllTCPbPri001Mgt:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pMgtCIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 120
            NetworkAclId: !Ref rNaclBpri1
  rNACLRuleAllowAllTCPbPri001bPub001:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetBpub001CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 130
            NetworkAclId: !Ref rNaclBpri1
  rNACLRuleAllowAllTCPbPri001bPub002:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetBpub002CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 140
            NetworkAclId: !Ref rNaclBpri1
  rNACLRuleAllowAllTCPbPri001bPri003:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetBpri003CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 150
            NetworkAclId: !Ref rNaclBpri1
  rNACLRuleAllowAllTCPbPri001bPri003:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetBpri003CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 150
            NetworkAclId: !Ref rNaclBpri1
# NACL Subnet B pri 002
  rNACLRuleAllowEgressBpri002:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref rNaclBpri2
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
  rNACLRuleAllowAllTCPbPri002Mgt:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pMgtCIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 120
            NetworkAclId: !Ref rNaclBpri2
  rNACLRuleAllowAllTCPbPri002aPub001:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetBpub001CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 130
            NetworkAclId: !Ref rNaclBpri2
  rNACLRuleAllowAllTCPbPri002bPub002:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetBpub002CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 140
            NetworkAclId: !Ref rNaclBpri2
  rNACLRuleAllowAllTCPbPri002bPri004:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetBpri004CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 150
            NetworkAclId: !Ref rNaclBpri2
  
# NACL Subnet B pri 003
  rNACLRuleAllowEgressBpri003:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref rNaclBpri3
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
  rNACLRuleAllowAllTCPbPri003Mgt:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pMgtCIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 120
            NetworkAclId: !Ref rNaclBpri3
  # rNACLRuleAllowAllTCPbPri003bPub001:
  #       Type: AWS::EC2::NetworkAclEntry
  #       Properties:
  #           CidrBlock: !Ref pSubnetBpub001CIDR
  #           Protocol: 6
  #           PortRange:
  #               From: 1
  #               To: 65535
  #           RuleAction: allow
  #           RuleNumber: 130
  #           NetworkAclId: !Ref rNaclBpri3
  # rNACLRuleAllowAllTCPbPri003aPub002:
  #       Type: AWS::EC2::NetworkAclEntry
  #       Properties:
  #           CidrBlock: !Ref pSubnetApub002CIDR
  #           Protocol: 6
  #           PortRange:
  #               From: 1
  #               To: 65535
  #           RuleAction: allow
  #           RuleNumber: 140
  #           NetworkAclId: !Ref rNaclBpri3
  rNACLRuleAllowAllTCPbPri003bPri001:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetBpri001CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 150
            NetworkAclId: !Ref rNaclBpri3
  rNACLRuleAllowAllTCPbPri003aPri003:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetApri003CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 160
            NetworkAclId: !Ref rNaclBpri3
# NACL Subnet B pri 004
  rNACLRuleAllowEgressBpri004:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref rNaclBpri4
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
  rNACLRuleAllowAllTCPbPri004Mgt:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pMgtCIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 120
            NetworkAclId: !Ref rNaclBpri4
  # rNACLRuleAllowAllTCPbPri004bPub001:
  #       Type: AWS::EC2::NetworkAclEntry
  #       Properties:
  #           CidrBlock: !Ref pSubnetApub001CIDR
  #           Protocol: 6
  #           PortRange:
  #               From: 1
  #               To: 65535
  #           RuleAction: allow
  #           RuleNumber: 130
  #           NetworkAclId: !Ref rNaclBpri4
  # rNACLRuleAllowAllTCPbPri004bPub002:
  #       Type: AWS::EC2::NetworkAclEntry
  #       Properties:
  #           CidrBlock: !Ref pSubnetApub002CIDR
  #           Protocol: 6
  #           PortRange:
  #               From: 1
  #               To: 65535
  #           RuleAction: allow
  #           RuleNumber: 140
  #           NetworkAclId: !Ref rNaclBpri4
  rNACLRuleAllowAllTCPbPri004bPri002:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetBpri002CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 150
            NetworkAclId: !Ref rNaclBpri4
  rNACLRuleAllowAllTCPbPri004aPri004:
        Type: AWS::EC2::NetworkAclEntry
        Condition: UseNacls
        Properties:
            CidrBlock: !Ref pSubnetApri004CIDR
            Protocol: 6
            PortRange:
                From: 1
                To: 65535
            RuleAction: allow
            RuleNumber: 160
            NetworkAclId: !Ref rNaclBpri4
# Associate private subnet Nacl's to subnets
  rNACLAssocAprivSubnet001:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Condition: UseNacls
        Properties:
            NetworkAclId: !Ref rNaclApri1
            SubnetId: !Ref pSubnetApri001
  rNACLAssocAprivSubnet002:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Condition: UseNacls
        Properties:
            NetworkAclId: !Ref rNaclApri2
            SubnetId: !Ref pSubnetApri002
  rNACLAssocAprivSubnet003:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Condition: UseNacls
        Properties:
            NetworkAclId: !Ref rNaclApri3
            SubnetId: !Ref pSubnetApri003
  rNACLAssocAprivSubnet004:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Condition: UseNacls
        Properties:
            NetworkAclId: !Ref rNaclApri4
            SubnetId: !Ref rSubnetApri004
  rNACLAssocBprivSubnet001:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Condition: UseNacls
        Properties:
            NetworkAclId: !Ref rNaclBpri1
            SubnetId: !Ref pSubnetBpri001
  rNACLAssocBprivSubnet002:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Condition: UseNacls
        Properties:
            NetworkAclId: !Ref rNaclBpri2
            SubnetId: !Ref pSubnetBpri002
  rNACLAssocBprivSubnet003:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Condition: UseNacls
        Properties:
            NetworkAclId: !Ref rNaclBpri3
            SubnetId: !Ref pSubnetBpri003
  rNACLAssocBprivSubnet004:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Condition: UseNacls
        Properties:
            NetworkAclId: !Ref rNaclBpri4
            SubnetId: !Ref rSubnetBpri004

Outputs:
  pStackName:
    Value: !Ref AWS::StackName
  SubnetApri004:
      Description: Private subnet a-pri-004 (app)
      Value: !Ref rSubnetApri004
  SubnetBpri004:
      Description: Private subnet b-pri-004 (app)
      Value: !Ref rSubnetApri004
  Help:
    Description: For assistance or questions regarding this template please email tpotter@infiniticg.com
    Value: ''